{"version":3,"sources":["Movies.js","App.js","index.js"],"names":["Movies","title","poster","year","genres","summary","className","src","alt","map","genre","index","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mOAiCeA,MA7Bf,YAAwD,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAOC,EAAU,EAAVA,QACzC,OAAO,sBAAKC,UAAY,SAAjB,UACK,qBAAKC,IAAOL,EAAQM,IAAOP,IAC3B,oBAAIK,UAAW,eAAf,SAA+BL,IAC/B,oBAAIK,UAAY,cAAhB,SAA+BH,IAC/B,oBAAIG,UAAY,SAAhB,SAA0BF,EAAOK,KAAI,SAACC,EAAOC,GACzC,OAAO,6BAAmBD,GAARC,QAGtB,6BAAKN,QCoCNO,E,4MA3CbC,MAAO,CACLC,WAAY,EACZC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC0BC,IAAMC,IAAI,4DADpC,gBACSJ,EADT,EACHK,KAAMA,KAAML,OACnB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAFxB,2C,uDAKZ,WACEQ,KAAKN,c,oBAGP,WAAU,IAAD,EACkBM,KAAKT,MAAzBC,EADE,EACFA,UAAWC,EADT,EACSA,OAClB,OACE,yBAAST,UAAW,YAApB,SACJ,8BACKQ,EACD,qBAAKR,UAAY,SAAjB,SACE,sBAAMA,UAAY,cAAlB,6BAEA,qBAAKA,UAAY,SAAjB,SACGS,EAAON,KAAI,SAAAc,GAAK,OACf,cAAC,EAAD,CACEtB,MAASsB,EAAMtB,MACfE,KAAQoB,EAAMpB,KACdC,OAAUmB,EAAMnB,OAChBC,QAAWkB,EAAMlB,QACjBH,OAAUqB,EAAMC,oBACVD,EAAME,iB,GAhCNC,IAAMC,WCDxBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c15f7147.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes, { string } from \"prop-types\"\r\n//prop을 찾아오는 게 핵심. 내가 찾던 prop 맞는지 check\r\n\r\nfunction Movies({title, poster, year, genres,summary}) {\r\n    return <div className = \"movie_\">\r\n                <img src = {poster} alt = {title}/>\r\n                <h1 className =\"movies_title\">{title}</h1>\r\n                <h5 className = \"movies_year\">{year}</h5>\r\n                <ul className = \"genres\">{genres.map((genre, index) => {\r\n                    return <li key = {index}>{genre}</li>//각각 장르 출력해야함.\r\n                })}</ul>\r\n\r\n                <h6>{summary}</h6>\r\n\r\n\r\n        </div>\r\n    \r\n\r\n}\r\n\r\nMovies.propTypes = {\r\n    \r\n    poster  :PropTypes.string.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary  :PropTypes.string.isRequired,\r\n    genres  :PropTypes.arrayOf(string).isRequired,\r\n    year  :PropTypes.number.isRequired,\r\n    \r\n\r\n};\r\n\r\n\r\nexport default Movies;","import React from \"react\";\nimport axios from \"axios\";\nimport Movies from \"./Movies\"\n\n\nclass App extends React.Component{\n  state= {\n    isLoading : true,\n    movies: []\n  };\n\n  getMovies = async () =>{\n    const {data:{data:{movies}}} =await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies, isLoading :false });    \n  };//life circle 함수들은 render 앞에 잇어야하는듯\n  \n  componentDidMount() {\n    this.getMovies();\n  }//  componentDidUpdate\n\n  render() {\n  const {isLoading, movies} =this.state; //ES6의 기능 중 하나로, this.state.isLoading 을 다 치기 귀찮으니깐, property인 {isLoading }으로 바꿔줌\n  return (\n    <section className =\"container\">\n<div>\n    {isLoading ? (\n    <div className = \"loader\"> \n      <span className = \"loader_text\">Loading . . .</span>\n    </div> ): (\n      <div className = \"movies\">\n        {movies.map(movie => (\n          <Movies\n            title = {movie.title}\n            year = {movie.year}\n            genres = {movie.genres}\n            summary = {movie.summary}\n            poster = {movie.medium_cover_image}\n            key= {movie.id}\n          />\n      ))}\n    </div > )}\n</div >\n  </section>\n  )\n  ;\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}